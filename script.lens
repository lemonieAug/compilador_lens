@start
    // ‚úÖ Declara√ß√µes e inicializa√ß√µes v√°lidas
    let contador: int = 0
    let limite: int = 5
    let ativo: bool = True
    let saldo: float = 10.5
    let nome: String = "Ana"

    print :: "Iniciando loop"

    // ‚úÖ While com compara√ß√£o v√°lida entre inteiros
    while contador < limite {
        print :: "Contador:" , contador
        contador = contador + 1         // OK: int + int
    }

    // ‚úÖ Condicional com opera√ß√£o l√≥gica entre bools
    if (ativo) && (contador == 5) {
        let mensagem: String = "Tudo certo!"
        print :: mensagem , nome
    } else {
        print :: "Algo deu errado"
    }

    // ‚úÖ Coer√ß√£o impl√≠cita de int para float
    let total: float = saldo + contador
    print :: "Total atualizado:", total

    // ‚úÖ Escopo do for: declara√ß√£o e uso interno
    for i in 0..3 {
        let texto: String = "Loop interno"
        print :: texto , i
    }

    // üîΩüîΩüîΩ ERROS PROPOSITAIS ABAIXO üîΩüîΩüîΩ

    // ‚ùå ERRO: uso de vari√°vel n√£o atribu√≠da
    //let x: int
    //print :: x  // [Erro Sem√¢ntico] Linha __: Vari√°vel 'x' usada antes de ser atribu√≠da.

    // ‚ùå ERRO: atribui√ß√£o de tipo incompat√≠vel
    //let nome2: String = 10
    // [Erro Sem√¢ntico] Linha __: Atribui√ß√£o incompat√≠vel: 'nome2' √© 'String', mas recebeu 'int'.

    // ‚ùå ERRO: uso de vari√°vel fora do escopo
    //for j in 0..2 {
    //    let temp: int = j
    //}
    //print :: temp  // [Erro Sem√¢ntico] Linha __: Vari√°vel 'temp' usada sem declara√ß√£o.

@end
